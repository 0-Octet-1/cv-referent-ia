version: '3.8'

services:
  cv-gregory-leterte:
    build: .
    container_name: cv-gregory-leterte
    ports:
      - "8080:80"
    restart: unless-stopped
    
    # Labels pour Portainer
    labels:
      # Informations générales
      - "io.portainer.accesscontrol.teams=administrators"
      - "com.docker.compose.project=cv-gregory-leterte"
      
      # Métadonnées du projet
      - "project.name=CV Gregory Le Terte"
      - "project.description=Site CV professionnel - Expert IA & Consultant"
      - "project.version=1.0.0"
      - "project.maintainer=gregory.leterte@gmail.com"
      - "project.url=http://localhost:8080"
      
      # Tags pour organisation dans Portainer
      - "environment=production"
      - "type=website"
      - "framework=static"
      - "webserver=nginx"
      
      # Monitoring et santé
      - "health.check=true"
      - "backup.required=false"
      - "logs.retention=7d"
      
      # Sécurité
      - "security.level=standard"
      - "ssl.required=false"
      
    # Configuration des ressources
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M
    
    # Variables d'environnement
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
      - TZ=Europe/Paris
    
    # Volumes pour logs (optionnel)
    volumes:
      - nginx_logs:/var/log/nginx
    
    # Réseau personnalisé
    networks:
      - cv_network
    
    # Health check
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Volumes
volumes:
  nginx_logs:
    driver: local
    labels:
      - "project.name=CV Gregory Le Terte"
      - "volume.type=logs"

# Réseaux
networks:
  cv_network:
    driver: bridge
    labels:
      - "project.name=CV Gregory Le Terte"
      - "network.type=frontend"
